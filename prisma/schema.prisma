generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  firstName   String        @map("first_name")
  lastName    String        @map("last_name")
  phoneNumber String        @map("phone_number")
  email       String        @unique
  password    String
  bio         String
  imageId     String?       @map("image_id")
  posts       Post[]
  comments    PostComment[]
  likedPosts  PostLike[]

  @@map("user")
}

model Post {
  id        String        @id @default(uuid())
  userId    String        @map("user_id")
  title     String
  body      String
  createdOn DateTime      @default(now()) @map("created_on")
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments  PostComment[]
  likes     PostLike[]

  @@index([userId], map: "post_user_id_fkey")
  @@map("post")
}

model PostComment {
  id        String   @id @default(uuid()) @map("id")
  userId    String   @map("user_id")
  postId    String   @map("post_id")
  body      String
  createdOn DateTime @default(now()) @map("created_on")
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([postId], map: "post_comment_post_id_fkey")
  @@map("post_comment")
}

model PostLike {
  id      String   @id @default(uuid()) @map("id")
  userId  String   @map("user_id")
  postId  String   @map("post_id")
  likedAt DateTime @default(now()) @map("liked_at")
  post    Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([postId], map: "post_like_post_id_fkey")
  @@map("post_like")
}

model Category {
  id          String @id @default(uuid()) @map("id")
  title       String @unique @map("title")
  description String @map("description")

  products Product[]
  @@map("category")
}

model Product {
  id          String    @id @default(uuid()) @map("id")
  continentId String    @map("continent_id")
  categoryId  String    @map("category_id")
  uploadedBy  String    @map("uploaded_by")
  uploadedAt  DateTime  @map("uploaded_at")
  barcode     String    @unique @map("barcode")
  name        String    @map("name")
  imageId     String?   @map("image_id")
  continent   Continent @relation(fields: [continentId], references: [id], onDelete: Cascade)
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("product")
}

model Continent {
  id       String    @id @default(uuid()) @map("id")
  name     String    @map("name")
  products Product[]

  @@map("continent")
}
